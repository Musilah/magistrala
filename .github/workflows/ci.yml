# This workflow is licensed under the Apache License, Version 2.0
# Copyright (c) Abstract Machines

name: CI Pipeline

on:
  push:
    branches:
      - main
      - MG-35-self-hostrunner
  pull_request:
    branches:
      - main
      - MG-35-self-hostrunner

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name : Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
          cache-dependency-path: "go.sum"
        
      - name : Run coverage
        run : |
          go test -race -coverprofile=coverage.out -covermode=atomic

      - name : Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV }}
          name: codecov-umbrella 
          fail_ci_if_error: false 
          verbose: true
        
      - name: Build Binaries
        run: |
          go mod vendor
          make all -j $(nproc)

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with: 
          version: latest

  check-protobuf:
    runs-on: ubuntu-latest

    needs: setup

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check for changes in specific files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - './auth.proto'
              - 'pkg/messaging/message.proto'
        
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Check Generated Protocol Buffer Files
        run: |
          PROTOC_VERSION=25.1
          PROTOC_GEN_VERSION=v1.31.0
          PROTOC_GRPC_VERSION=v1.3.0
          PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip

          curl -0L https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP -o $PROTOC_ZIP
          unzip -o $PROTOC_ZIP -d protoc3
          sudo mv protoc3/bin/* /usr/local/bin/
          sudo mv protoc3/include/* /usr/local/include/
          rm -rf $PROTOC_ZIP protoc3

          go install google.golang.org/protobuf/cmd/protoc-gen-go@$PROTOC_GEN_VERSION
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@$PROTOC_GRPC_VERSION

          export PATH=$PATH:/usr/local/bin/protoc
          export PATH=$PATH:$HOME/go/bin

          echo "Setting up Magistrala..."
          for p in $(ls ./*.pb.go); do
            mv $p $p.tmp
          done

          for p in $(ls pkg/messaging/*.pb.go); do
            mv $p $p.tmp
          done

          make proto

          for p in $(ls ./*.pb.go); do
            if ! cmp -s $p $p.tmp; then
              echo "Proto file and generated Go file $p are out of sync!"
              exit 1
            fi
          done

          for p in $(ls pkg/messaging/*.pb.go); do
            if ! cmp -s $p $p.tmp; then
              echo "Proto file and generated Go file $p are out of sync!"
              exit 1
            fi
          done

  test-users:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'users/**'
              - 'cmd/users/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Users
        run: |
          cd users
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html
        
      - name: Upload Codecov coverage
        uses: actions/upload-artifact@v2
        with:
            name: code-coverage
            path: users/coverage.html

  build-users:
    runs-on: ubuntu-latest

    needs: test-users

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check for changes in 'users' and 'cmd/users' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'users/**'
              - 'cmd/users/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Build Users
        run: |
          make docker_users
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}
        
     
  test-things:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'things/**'
              - 'cmd/things/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
        
      - name: Test Things
        run: |
          cd things
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html
        
  build-things:
    runs-on: ubuntu-latest

    needs: test-things

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check for changes in 'things' and 'cmd/things' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'things/**'
              - 'cmd/things/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Build Things
        run: |
          make docker_things
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}
    
  test-coap:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'coap/**'
              - 'cmd/coap/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
        
      - name: Test CoAP
        run: |
          cd coap
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-coap:
    runs-on: ubuntu-latest

    needs: test-coap
            
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'coap' and 'cmd/coap' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'coap/**'
              - 'cmd/coap/**'
        
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
        
      - name: Build CoAP
        run: |
          make docker_coap

        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-http:
    runs-on: ubuntu-latest
    needs: [setup, check-protobuf]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'http/**'
              - 'cmd/http/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
     
      - name: Test HTTP
        run: |
          cd http
          go test ./... -race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html
          ./codecov

        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV }}
    
  build-http:
    runs-on: ubuntu-latest

    needs: test-http

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'http' and 'cmd/http' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'http/**'
              - 'cmd/http/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push HTTP
        run: |
          docker push magistrala/http:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-mqtt:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps: 
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'mqtt/**'
              - 'cmd/mqtt/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test MQTT
        run: |
          cd mqtt
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html
          ./codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV }}

  build-mqtt:
    runs-on: ubuntu-latest

    needs: test-mqtt

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'mqtt' and 'cmd/mqtt' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'mqtt/**'
              - 'cmd/mqtt/**'
        
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
            go-version: 1.21
        
      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push MQTT
        run: |
            docker push magistrala/mqtt:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}
    
  test-ws:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'ws/**'
              - 'cmd/ws/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
            go-version: 1.21

      - name: Test WS
        run: |
            cd ws
            go test ./... --race -v -coverprofile=coverage.out
            go tool cover -html=coverage.out -o coverage.html

  build-ws:
    runs-on: ubuntu-latest

    needs: test-ws

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'ws/**'
              - 'cmd/ws/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
            go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push WS
        run: |
            docker push magistrala/ws:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}
        
  test-bootstrap:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'bootstrap/**'
              - 'cmd/bootstrap/**'
              - 'things/policies/postgres/policies.go'
              - 'things/policies/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Bootstrap
        run: |
          cd bootstrap
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html
        
  build-bootstrap:
    runs-on: ubuntu-latest

    needs: test-bootstrap

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'bootstrap' and 'cmd/bootstrap' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'bootstrap/**'
              - 'cmd/bootstrap/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Bootstrap
        run: |
          docker push magistrala/bootstrap:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-certs:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'certs/**'
              - 'cmd/certs/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Certs
        run: |
          cd certs
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-certs:
    runs-on: ubuntu-latest

    needs: test-certs

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'certs' and 'cmd/certs' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'certs/**'
              - 'cmd/certs/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Certs
        run: |
          docker push magistrala/certs:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-provision:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'provision' and 'cmd/provision' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'provision/**'
              - 'cmd/provision/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Provision
        run: |
          cd provision
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-provision:
    runs-on: ubuntu-latest

    needs: test-provision

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'provision/**'
              - 'cmd/provision/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Provision
        run: |
          docker push magistrala/http:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-twins:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'twins/**'
              - 'cmd/twins/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Twins
        run: |
          cd twins
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-twins:
    runs-on: ubuntu-latest

    needs: test-twins

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'twins' and 'cmd/twins' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'twins/**'
              - 'cmd/twins/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Twins
        run: |
          docker push magistrala/twins:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-readers:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'readers/**'
              - 'cmd/cassandra-reader/**'
              - 'cmd/influxdb-reader/**'
              - 'cmd/mongodb-reader/**'
              - 'cmd/postgres-reader/**'
              - 'cmd/timescale-reader/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Readers
        run: |
          cd readers
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-readers:
    runs-on: ubuntu-latest

    needs: test-readers

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'readers/**'
              - 'cmd/cassandra-reader/**'
              - 'cmd/influxdb-reader/**'
              - 'cmd/mongodb-reader/**'
              - 'cmd/postgres-reader/**'
              - 'cmd/timescale-reader/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Readers
        run: |
          docker push magistrala/cassandra-reader:latest
          docker push magistrala/influxdb-reader:latest
          docker push magistrala/mongodb-reader:latest
          docker push magistrala/postgres-reader:latest
          docker push magistrala/timescale-reader:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-consumers:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'consumers/**'
              - 'cmd/cassandra-writer/**'
              - 'cmd/influxdb-writer/**'
              - 'cmd/mongodb-writer/**'
              - 'cmd/postgres-writer/**'
              - 'cmd/timescale-writer/**'
              - 'cmd/smpp-notifier/**'
              - 'cmd/smtp-notifier/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Consumers
        run: |
          cd consumers
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-consumers:
    runs-on: ubuntu-latest

    needs: test-consumers

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'consumers/**'
              - 'cmd/cassandra-writer/**'
              - 'cmd/influxdb-writer/**'
              - 'cmd/mongodb-writer/**'
              - 'cmd/postgres-writer/**'
              - 'cmd/timescale-writer/**'
              - 'cmd/smpp-notifier/**'
              - 'cmd/smtp-notifier/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Consumers
        run: |
          docker push magistrala/cassandra-writer:latest
          docker push magistrala/influxdb-writer:latest
          docker push magistrala/mongodb-writer:latest
          docker push magistrala/postgres-writer:latest
          docker push magistrala/timescale-writer:latest
          docker push magistrala/smtp-notifier:latest
        
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-cli:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'cli' and 'cmd/cli' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'cli/**'
              - 'cmd/cli/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test CLI
        run: |
          cd cli
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-cli:
    runs-on: ubuntu-latest

    needs: test-cli

    steps:
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: Check for changes in 'cli' and 'cmd/cli' directories
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'cli/**'
              - 'cmd/cli/**'
      
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push CLI
        run: docker push magistrala/cli:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-LoRa:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'lora/**'
              - 'cmd/lora/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test LoRa
        run: |
          cd lora
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-LoRa:
    runs-on: ubuntu-latest

    needs: test-LoRa

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'lora/**'
              - 'cmd/lora/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push LoRa
        run: docker push magistrala/lora:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-opc-ua:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'opcua/**'
              - 'cmd/opcua/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test OPC-UA
        run: |
          cd opcua
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  build-opc-ua:
    runs-on: ubuntu-latest
    needs: test-opc-ua
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in specific paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            any:
              - 'opcua/**'
              - 'cmd/opcua/**'
              - 'things/api/grpc/**'
              - 'auth/service.go'
              - 'auth/api/grpc/client.go'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push OPC-UA
        run: docker push magistrala/opcua:latest
        env:
          DOCKER_HUB_SECRET: ${{ secrets.DOCKER_HUB }}

  test-internal: 
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'internal' directory
        uses: dorny/paths-filter@v2
        id: changes
        with:
            filters: |
                internal:
                - 'internal/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Internal
        run: |
          cd internal
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  test-logger:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'logger' directory
        uses: dorny/paths-filter@v2
        id: changes
        with:
            filters: |
                logger:
                - 'logger/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Logger
        run: |
          cd logger
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  test-pkg:
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'pkg' directory
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            pkg:
              - 'pkg/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test PKG
        run: |
          cd pkg
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  test-tools: 
    runs-on: ubuntu-latest

    needs: [setup, check-protobuf]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for changes in 'tools' directory
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            tools:
              - 'tools/**'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test Tools
        run: |
          cd tools
          go test ./... --race -v -coverprofile=coverage.out
          go tool cover -html=coverage.out -o coverage.html

  compile-check-rabbitmq:
    runs-on: ubuntu-latest

    needs: setup

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compile For RabbitMQ
        run: |
          export MG_MESSAGE_BROKER_TYPE=rabbitmq
          make mqtt
            
        
  compile-check-redis:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Compile For Redis
        run: |
          export MG_ES_STORE_TYPE=redis
          make mqtt
